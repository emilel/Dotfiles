# random
alias nonoti='notify-send DUNST_COMMAND_PAUSE'
alias noti='notify-send DUNST_COMMAND_RESUME'
alias k='echo "hoppsan..."'
alias dkill='docker container kill $(docker ps -q); docker container rm $(docker ps -a -q)'
alias areload='source ~/.zsh_aliases'


# view
alias splitv='export SPLIT=v'
alias splitb='export SPLIT=h'


# shortcuts
alias t='tmux a'
alias v='nvim'
alias up='..'
alias upp='../..'
alias uppp='../../..'
alias bt='bluetoothctl'
alias dog='bat --paging never'
alias py='python3'
alias lower="rename -v 'y/A-Z/a-z/'"
alias rmspace="rename -v 's/ /_/g'"
alias rmsym="rename -v 's/\(|\[|\]|\)//g'"
alias path="readlink -f"
alias xargs='tr \\n \\0 | xargs -0 '


# custom program settings
alias ll='ls -ahlF'
alias ls='ls -v --group-directories-first --color=auto'
alias mv='mv -nv'
alias cp='cp -v'
alias rm='rm -v'
alias la='ls -A'
alias lll='ls -CF'


# conf
alias bconf='nvim ~/.config/bat/config'
alias bashconf='nvim ~/.bashrc'
alias kconf='nvim ~/.config/kitty/kitty.conf'
alias fconf='nvim ~/.fdignore'
alias tconf='nvim ~/.tmux.conf'
alias zaconf='nvim ~/.config/zathura/zathurarc'
alias vimconf='nvim ~/.vimrc'
alias comconf='nvim ~/.config/compton.conf'
alias i3conf='nvim ~/.config/i3/config'
alias i3bconf='nvim ~/.config/i3/i3blocks.conf'
alias zconf='nvim ~/.zshrc'
alias aconf='nvim ~/.zsh_aliases'
alias boconf='nvim ~/.boschrc'


# backup dot files
alias dotfiles='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
alias dotfilesls='dotfiles ls-tree -r --name-only HEAD'


# key shortcuts

# vim keys for tab suggestions
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history


# edit command in editor
bindkey -M vicmd 'V' edit-command-line

# fzf
bindkey '^A' fzf-file-widget
bindkey '^S' fzf-cd-widget


# open fzf
zle -N n
bindkey '^U' n


# functions
open() {
    for word in $@
    do
        xdg-open $word 2>/dev/null &disown
    done
}


rep() {
    action="$1"
    shift
    for file in $@
    do
        $action $file
        echo
    done
}

fzfopen() {
    for file in $(fzf -m --preview-window=down --preview "bat --color=always --line-range :50 {}")
    do
        xdg-open $file 2>/dev/null &disown
    done
}

pushnew() {
  git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)
}

pptxtopdf() {
    soffice --headless --convert-to pdf $1
}

cd() {
    builtin cd $1
    echo $(pwd) > ~/.last_dir
}

cdlast() {
    cd ~/.last_dir
}

copy() {
    $@ | tr -d '\n' | xclip -selection clipboard
}

n ()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, remove the "export" as in:
    #     NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    # NOTE: NNN_TMPFILE is fixed, should not be modified
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    nnn -R "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}
